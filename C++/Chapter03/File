一、拷贝构造函数
    1、调用时机：用已存在的对象，去初始化另一个新对象，系统自动调用该类的拷贝函数；
    表现形式一：A a1;A a2(a1);//传对象
    表现形式二：A a1;A*a3=new A(a2);//传对象
    表现形式三：A a1;A a4 = a1;//赋值
    表现形式四：printA(a4);//传对象 拷贝构造（新对象为形参对象）
    表现形式五：A a5=getA();//拷贝构造（Xcode将函数返回值的形式吞噬掉了/内存优化）
    3、拷贝构造函数的特点：
    满足构造函数特点：公有、名称与类名一致、无返回值类型、可以带参数；
    类中未定义拷贝构造函数，系统提供的默认的拷贝构造函数（浅拷贝）
    自定义拷贝构造函数实现：参数必须是该类的引用类型（加const）（参数必须传引用类型，不能传值，否则死调用）
    自定义实现：必须深拷贝（类中有指针成员变量存在）
二、析构函数：用于销毁对象的成员函数
1、调用时机：对象声明周期结束、对象离开作用域、使用指针指向堆内存，手动delete堆内存时系统自动调用析构函数；
2、特点：公有、无参数、无返回值、唯一（不能重载）
3、实现：~类名（）{//对指针成员变量进行手动delete；置空}
三、c++三大件
内容：拷贝构造函数+否则运算符重载+析构函数；
原因：必须要对有指针成员的对象进行深拷贝，防止内存泄漏和二次释放；
四、实现深拷贝的情况（类中的指针成员相关的修改函数以及对象赋值、拷贝函数均需要深拷贝）
1、构造函数（拷贝构造函数）；
2、赋值运算符重载；
3、设置函数（针对指针作用变量）；







1. 定义STRING类容器的对象（该容器可以存储多个字符数据，即字符串内容）。
要求：
1）要求存储字符数据：即其属性变量为：char * p; int size；
2）完成三大件实现深拷贝并进行测试。

测试代码：
STRING s1；
STRING s2 = s1;
cout<<s2<<endl;

STRING s3；
s3=s2;
cout<<s3<<endl;

STRING * p = new STRING(s1);
cout<<*p<<endl;
delete p;
p=nullptr;



2. 定义Vector类容器的对象（该容器对象可以存储多个字符串数据的对象，即一个字符串数组）。
要求：
1）要求存储字符串数据：即其属性变量为：STRING * p; int size；(其中STRING为自定义字符串类型)
2）完成三大件实现深拷贝并进行测试。
测试代码：
Vector v1；
Vector v2 = v1;
cout<<v2<<endl;
Vector v3；
v3=v2;
cout<<v3<<endl;
Vector * p = new Vector(v1);
cout<<*p<<endl;
delete p;
p=nullptr;
3、继续完成任务一：Person类和Date类
要求：
1)添加三大件给Person类和Date类
2）实现深拷贝操作和测试；

